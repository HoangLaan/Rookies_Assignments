// <auto-generated />
using System;
using EFCoreAssignment01.WebApp;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreAssignment01.WebApp.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20240510194052_V1")]
    partial class V1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCoreAssignment01.WebApp.Models.Departments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4b07443f-34f7-4248-be61-2d5710ee0ec5"),
                            Name = "Software Development"
                        },
                        new
                        {
                            Id = new Guid("7b8a2d2a-0889-4eac-b0bb-5c6b6c368023"),
                            Name = "Finance"
                        },
                        new
                        {
                            Id = new Guid("89643d52-03a3-4df5-9ab7-7b97fb4bff75"),
                            Name = "Accountant"
                        },
                        new
                        {
                            Id = new Guid("390cfc95-9a0b-4567-834d-e5d41a5155e5"),
                            Name = "HR"
                        });
                });

            modelBuilder.Entity("EFCoreAssignment01.WebApp.Models.Employees", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EFCoreAssignment01.WebApp.Models.Project_Employee", b =>
                {
                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.HasKey("ProjectId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("ProjectEmployees");
                });

            modelBuilder.Entity("EFCoreAssignment01.WebApp.Models.Projects", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("EFCoreAssignment01.WebApp.Models.Salaries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Salary")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("EFCoreAssignment01.WebApp.Models.Employees", b =>
                {
                    b.HasOne("EFCoreAssignment01.WebApp.Models.Departments", "Departments")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("EFCoreAssignment01.WebApp.Models.Project_Employee", b =>
                {
                    b.HasOne("EFCoreAssignment01.WebApp.Models.Projects", "Projects")
                        .WithMany("ProjectEmployee")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreAssignment01.WebApp.Models.Employees", "Employees")
                        .WithMany("ProjectEmployee")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("EFCoreAssignment01.WebApp.Models.Salaries", b =>
                {
                    b.HasOne("EFCoreAssignment01.WebApp.Models.Employees", "Employees")
                        .WithOne("Salaries")
                        .HasForeignKey("EFCoreAssignment01.WebApp.Models.Salaries", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EFCoreAssignment01.WebApp.Models.Departments", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EFCoreAssignment01.WebApp.Models.Employees", b =>
                {
                    b.Navigation("ProjectEmployee");

                    b.Navigation("Salaries")
                        .IsRequired();
                });

            modelBuilder.Entity("EFCoreAssignment01.WebApp.Models.Projects", b =>
                {
                    b.Navigation("ProjectEmployee");
                });
#pragma warning restore 612, 618
        }
    }
}
