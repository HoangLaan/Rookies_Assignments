// <auto-generated />
using System;
using EFCoreAssignment02.WebApp.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreAssignment02.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240514012818_v3")]
    partial class v3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCoreAssignment02.WebApp.Models.Departments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aa733daf-6357-4e8a-8829-4b83af4f570c"),
                            Name = "Software Development"
                        },
                        new
                        {
                            Id = new Guid("9ec0165f-8ab8-42f4-8c1b-4e3e201c673d"),
                            Name = "Finance"
                        },
                        new
                        {
                            Id = new Guid("2d23e418-7ea8-4020-8908-fbbfb325dec7"),
                            Name = "Accountant"
                        },
                        new
                        {
                            Id = new Guid("81b43805-3f0a-4786-8d42-64d6ca3fe9cf"),
                            Name = "HR"
                        });
                });

            modelBuilder.Entity("EFCoreAssignment02.WebApp.Models.Employees", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("JoinedDated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EFCoreAssignment02.WebApp.Models.Project_Employee", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.HasKey("EmployeeId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectEmployee");
                });

            modelBuilder.Entity("EFCoreAssignment02.WebApp.Models.Projects", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ffc0818e-2662-4e5c-b49c-91a84257893a"),
                            Name = "MB Bank"
                        },
                        new
                        {
                            Id = new Guid("8c012bcd-9d66-4209-a8e8-bfcc4dca9aa6"),
                            Name = "Techcombank"
                        });
                });

            modelBuilder.Entity("EFCoreAssignment02.WebApp.Models.Salaries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Salaries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d0de663c-0795-4b95-9eba-7a7746fdb3a7"),
                            EmployeeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Salary = 4000.0
                        },
                        new
                        {
                            Id = new Guid("46472e10-c263-4acf-b586-61015fc19179"),
                            EmployeeId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Salary = 5000.0
                        });
                });

            modelBuilder.Entity("EFCoreAssignment02.WebApp.Models.Employees", b =>
                {
                    b.HasOne("EFCoreAssignment02.WebApp.Models.Departments", "Department")
                        .WithMany("Employess")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EFCoreAssignment02.WebApp.Models.Project_Employee", b =>
                {
                    b.HasOne("EFCoreAssignment02.WebApp.Models.Employees", "Employee")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreAssignment02.WebApp.Models.Projects", "Project")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EFCoreAssignment02.WebApp.Models.Salaries", b =>
                {
                    b.HasOne("EFCoreAssignment02.WebApp.Models.Employees", "Employee")
                        .WithOne("Salary")
                        .HasForeignKey("EFCoreAssignment02.WebApp.Models.Salaries", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EFCoreAssignment02.WebApp.Models.Departments", b =>
                {
                    b.Navigation("Employess");
                });

            modelBuilder.Entity("EFCoreAssignment02.WebApp.Models.Employees", b =>
                {
                    b.Navigation("ProjectEmployees");

                    b.Navigation("Salary")
                        .IsRequired();
                });

            modelBuilder.Entity("EFCoreAssignment02.WebApp.Models.Projects", b =>
                {
                    b.Navigation("ProjectEmployees");
                });
#pragma warning restore 612, 618
        }
    }
}
