// <auto-generated />
using System;
using EFCoreAssignment02.WebApp.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFCoreAssignment02.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240513200330_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFCoreAssignment02.WebApp.Models.Departments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("693b47b3-d4fb-4a10-8483-09e1d99d54a7"),
                            Name = "Software Development"
                        },
                        new
                        {
                            Id = new Guid("5bd36ced-0273-4e69-a296-8d352130586f"),
                            Name = "Finance"
                        },
                        new
                        {
                            Id = new Guid("1526e33f-eaee-4d9a-967b-34a5432762aa"),
                            Name = "Accountant"
                        },
                        new
                        {
                            Id = new Guid("bf777f01-6e19-4514-9e09-0f2b17aceaf8"),
                            Name = "HR"
                        });
                });

            modelBuilder.Entity("EFCoreAssignment02.WebApp.Models.Employees", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("JoinedDated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EFCoreAssignment02.WebApp.Models.Project_Employee", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.HasKey("EmployeeId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectEmployee");
                });

            modelBuilder.Entity("EFCoreAssignment02.WebApp.Models.Projects", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dc0a1aad-9c68-48e1-9a89-e3f98d08fbaa"),
                            Name = "MB Bank"
                        },
                        new
                        {
                            Id = new Guid("9a50909f-a798-40e6-b314-f591d232c894"),
                            Name = "Techcombank"
                        },
                        new
                        {
                            Id = new Guid("b179318b-a357-4288-9003-68734cf6bdfc"),
                            Name = "Vietinbank"
                        },
                        new
                        {
                            Id = new Guid("f9f79a32-3e49-4b40-9ff0-4f59c78e805b"),
                            Name = "HSCB"
                        });
                });

            modelBuilder.Entity("EFCoreAssignment02.WebApp.Models.Salaries", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("EFCoreAssignment02.WebApp.Models.Employees", b =>
                {
                    b.HasOne("EFCoreAssignment02.WebApp.Models.Departments", "Department")
                        .WithMany("Employess")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("EFCoreAssignment02.WebApp.Models.Project_Employee", b =>
                {
                    b.HasOne("EFCoreAssignment02.WebApp.Models.Employees", "Employee")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreAssignment02.WebApp.Models.Projects", "Project")
                        .WithMany("ProjectEmployees")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("EFCoreAssignment02.WebApp.Models.Salaries", b =>
                {
                    b.HasOne("EFCoreAssignment02.WebApp.Models.Employees", "Employee")
                        .WithOne("Salary")
                        .HasForeignKey("EFCoreAssignment02.WebApp.Models.Salaries", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EFCoreAssignment02.WebApp.Models.Departments", b =>
                {
                    b.Navigation("Employess");
                });

            modelBuilder.Entity("EFCoreAssignment02.WebApp.Models.Employees", b =>
                {
                    b.Navigation("ProjectEmployees");

                    b.Navigation("Salary")
                        .IsRequired();
                });

            modelBuilder.Entity("EFCoreAssignment02.WebApp.Models.Projects", b =>
                {
                    b.Navigation("ProjectEmployees");
                });
#pragma warning restore 612, 618
        }
    }
}
